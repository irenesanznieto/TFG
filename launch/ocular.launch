<launch>
  <arg name="event_topic" default="ocular/EVENTHANDLER/event"/>
  <!-- <arg name="interactive_event_topic" default="ocular/EVENTHANDLER/interactive_event"/> -->
  <arg name="interactive_event_topic" default="ocular/EVENTHANDLER/event"/>

<!--
    <arg name="fixed_frame" value="camera_depth_frame"/>
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find pi_tracker)/urdf/pi_robot.urdf.xacro'"/>
    <param name="/use_sim_time" value="False"/>
    <node name="robot_state_publisher"
          pkg="robot_state_publisher"
          type="state_publisher">
        <param name="publish_frequency" value="20.0"/>
    </node>
-->

<!--    
    <include file="$(find openni_launch)/launch/kinect_frames.launch"/>
-->


    <include file="$(find openni_launch)/launch/openni.launch">
        <arg name="depth_registration" value="false"/>
        <arg name="device_id" default="A00363A17849048A" />
    </include>

    <include file="$(find skeleton_markers)/launch/skeleton.launch"/>
<!--
    <node name="skeleton_tracker"
          pkg="pi_tracker"
          type="skeleton_tracker">
        <param name="fixed_frame" value="$(arg fixed_frame)"/>
        <param name="load_filepath" value="$(find pi_tracker)/params/SamplesConfigNewOpenNI.xml" />
    </node>
-->

<!--  CONVERTER NODE: -->
    <node pkg="ocular"
          type="converter"
          name="converter"
          args="skeleton:=/skeleton
                hand_location:=/ocular/CONVERTER/hand_location"/>
    
<!-- ROI SEGMENTER -->
<!-- 3D-->
    <node pkg="ocular"
          type="roi_segmenter3D"
          name="roi_segmenter3D"
          args="original_pc:=/camera/depth/points
                hand_location:=/ocular/CONVERTER/hand_location
                segmented_pc:=/ocular/ROI3D/segmented_pc
                segmented_coordinates_px:=/ocular/ROI3D/segmented_coordinates_px
                event:=$(arg interactive_event_topic)"/>
    
<!-- 2D -->
    <node pkg="ocular"
          type="roi_segmenter2D"
          name="roi_segmenter2D"
          args="original_image:=/camera/rgb/image_color 
                segmented_coordinates_px:=/ocular/ROI3D/segmented_coordinates_px
                segmented_image:=/ocular/ROI2D/segmented_image"/>
    

<!-- FEATURE EXTRACTOR-->
<!-- 2D -->
    <node pkg="ocular"
          type="featureextractor2D"
          name="featureextractor2D"
          args="segmented_image:=/ocular/ROI2D/segmented_image
                descriptors2D:=/ocular/FE2D/descriptors2D
                image_with_keypoints:=/ocular/ROI2D/segmented_image_with_keypoints"/>
    
<!-- 3D -->
    <node pkg="ocular"
          type="featureextractor3D"
          name="featureextractor3D"
          args="segmented_pc:=/ocular/ROI3D/segmented_pc
                descriptors3D:=/ocular/FE3D/descriptors3D"/>


<!--  EVENT HANDLER-->
    <node pkg="ocular"
          type="event_handler"
          name="event_handler"
          args="event:=$(arg event_topic)
                skeleton:=/skeleton"/>

<!--  LEARNER RECOGNIZER-->
    <node pkg="ocular"
          type="learner_recognizer"
          name="learner_recognizer"
          args="descriptors2D:=/ocular/FE2D/descriptors2D
                object_id:=/ocular/object_id
                event:=$(arg interactive_event_topic)
                descriptors3D:=/ocular/FE3D/descriptors3D"/>


<!--  IMAGE VIEW-->
<!--    TRANSFORM FROM HAND_IMAGE CUSTOM MSG TO ROS IMAGE-->
    <node pkg="ocular"
          type="image_view"
          name="from_hand_msg_to_image_msg"
          args="image_in:=/ocular/ROI2D/segmented_image
                image_out:=/ocular/ROI2D/segmented_image_ROS_type"/>
    
<!--    VIEW SEGMENTED HAND IMAGE-->
    <node pkg="image_view"
          type="image_view"
          name="hand_image"
          args="image:=/ocular/ROI2D/segmented_image_ROS_type"/>

<!-- WRITE TO FILE-->
<!-- 
    <node pkg="ocular"
          type="write_to_file.py"
          name="write_to_file"
          args="object_id:=/final_object_id"/>
-->

<!-- FREQUENCY COUNTER-->
<!--     
  <node pkg="ocular"
        type="system_output.py"
        name="system_output"
        args="object_id:=/ocular/object_id"/>
-->

<!-- FREQUENCY COUNTER-->
<!--     
    <node pkg="ocular"
          type="ocular_estimator.py"
          name="ouput_averager"
          args="object_id:=/ocular/object_id
                final_object_id:=/ocular/final_object_id">
        <param name="rate" value="30"/>
    </node>
-->


<!-- VIEW 2D KEYPOINTS -->
  
    <node pkg="image_view"
          type="image_view"
          name="hand_image_with_keypoints"
          args="image:=/ocular/ROI2D/segmented_image_with_keypoints"/>

    
    
<!--  KINECT ORIGINAL IMAGE-->
<!--
    <node pkg="image_view"
          type="image_view"
          name="kinect_image"
          args="image:=/camera/rgb/image_color"/>
-->

</launch>
